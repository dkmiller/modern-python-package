{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Modern Python Package Template for a fully-featured Python repo with build, docs, etc. Helps answer questions like: Should I use setup.py , setup.cfg , or pyproject.toml ? Circle CI vs. GitHub Actions vs. Jenkins? How do I publish auto-generated docs? How do I handle unit tests, test coverage, etc.? How should I publish to PyPI? How do I configure a development environment: virtual environments, Conda environments, Codespaces? Similar repositories This repository is not especially original. You may find similar ideas in topics/python-package-example Hochfrequenz/python_template_repository simonw/python-lib-template-repository alvarobartt/python-package-template","title":"Home"},{"location":"#modern-python-package","text":"Template for a fully-featured Python repo with build, docs, etc. Helps answer questions like: Should I use setup.py , setup.cfg , or pyproject.toml ? Circle CI vs. GitHub Actions vs. Jenkins? How do I publish auto-generated docs? How do I handle unit tests, test coverage, etc.? How should I publish to PyPI? How do I configure a development environment: virtual environments, Conda environments, Codespaces?","title":"Modern Python Package"},{"location":"#similar-repositories","text":"This repository is not especially original. You may find similar ideas in topics/python-package-example Hochfrequenz/python_template_repository simonw/python-lib-template-repository alvarobartt/python-package-template","title":"Similar repositories"},{"location":"docs/specs/checked-in-design/","text":"Checked-in design docs Consider setting up a process for design proposals via checked-in Markdown files which are reviewed just like source code. For inspiration / reference, see: .NET designs C# language design Kubernetes enhancements PyTorch RFCs Checked in design docs should include snippets of code that would work after the design is implemented: from modern_python_package import inner_method big_number = 42 cool_variable = inner_method(\"short string\", big_number) Use emoji to call attention to a specific point.","title":"Checked In Design"},{"location":"docs/specs/checked-in-design/#checked-in-design-docs","text":"Consider setting up a process for design proposals via checked-in Markdown files which are reviewed just like source code. For inspiration / reference, see: .NET designs C# language design Kubernetes enhancements PyTorch RFCs Checked in design docs should include snippets of code that would work after the design is implemented: from modern_python_package import inner_method big_number = 42 cool_variable = inner_method(\"short string\", big_number) Use emoji to call attention to a specific point.","title":"Checked-in design docs"},{"location":"reference/modern_python_package/","text":"Module modern_python_package This is the package-wide docstring. ??? example \"View Source\" \"\"\" This is the package-wide docstring. \"\"\" from .core import inner_method # noqa: F401 Sub-modules modern_python_package.cli modern_python_package.core","title":"Index"},{"location":"reference/modern_python_package/#module-modern_python_package","text":"This is the package-wide docstring. ??? example \"View Source\" \"\"\" This is the package-wide docstring. \"\"\" from .core import inner_method # noqa: F401","title":"Module modern_python_package"},{"location":"reference/modern_python_package/#sub-modules","text":"modern_python_package.cli modern_python_package.core","title":"Sub-modules"},{"location":"reference/modern_python_package/cli/","text":"Module modern_python_package.cli Command-line interface for the package. ??? example \"View Source\" \"\"\" Command-line interface for the package. \"\"\" from modern_python_package.core import inner_method def main(): \"\"\" Command line entrypoint for the package. \"\"\" print(\"Hi from the `main` entrypoint!\") inner_method(\"**\", 100) Functions main def main( ) Command line entrypoint for the package. ??? example \"View Source\" def main(): \"\"\" Command line entrypoint for the package. \"\"\" print(\"Hi from the `main` entrypoint!\") inner_method(\"**\", 100)","title":"CLI"},{"location":"reference/modern_python_package/cli/#module-modern_python_packagecli","text":"Command-line interface for the package. ??? example \"View Source\" \"\"\" Command-line interface for the package. \"\"\" from modern_python_package.core import inner_method def main(): \"\"\" Command line entrypoint for the package. \"\"\" print(\"Hi from the `main` entrypoint!\") inner_method(\"**\", 100)","title":"Module modern_python_package.cli"},{"location":"reference/modern_python_package/cli/#functions","text":"","title":"Functions"},{"location":"reference/modern_python_package/cli/#main","text":"def main( ) Command line entrypoint for the package. ??? example \"View Source\" def main(): \"\"\" Command line entrypoint for the package. \"\"\" print(\"Hi from the `main` entrypoint!\") inner_method(\"**\", 100)","title":"main"},{"location":"reference/modern_python_package/core/","text":"Module modern_python_package.core Core functionality used throughout the package. ??? example \"View Source\" \"\"\" Core functionality used throughout the package. \"\"\" import logging log = logging.getLogger(__name__) def inner_method(string: str, integer: int) -> str: \"\"\" This method duplicates a string the specified number of times. \"\"\" rv = string * integer log.info(\"Generated string %s\", rv) return rv Variables log Functions inner_method def inner_method( string: str, integer: int ) -> str This method duplicates a string the specified number of times. ??? example \"View Source\" def inner_method(string: str, integer: int) -> str: \"\"\" This method duplicates a string the specified number of times. \"\"\" rv = string * integer log.info(\"Generated string %s\", rv) return rv","title":"Core"},{"location":"reference/modern_python_package/core/#module-modern_python_packagecore","text":"Core functionality used throughout the package. ??? example \"View Source\" \"\"\" Core functionality used throughout the package. \"\"\" import logging log = logging.getLogger(__name__) def inner_method(string: str, integer: int) -> str: \"\"\" This method duplicates a string the specified number of times. \"\"\" rv = string * integer log.info(\"Generated string %s\", rv) return rv","title":"Module modern_python_package.core"},{"location":"reference/modern_python_package/core/#variables","text":"log","title":"Variables"},{"location":"reference/modern_python_package/core/#functions","text":"","title":"Functions"},{"location":"reference/modern_python_package/core/#inner_method","text":"def inner_method( string: str, integer: int ) -> str This method duplicates a string the specified number of times. ??? example \"View Source\" def inner_method(string: str, integer: int) -> str: \"\"\" This method duplicates a string the specified number of times. \"\"\" rv = string * integer log.info(\"Generated string %s\", rv) return rv","title":"inner_method"}]}